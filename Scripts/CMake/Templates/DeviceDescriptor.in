/*===-- DeviceDescriptor.h - Description of Undiscoverable Device Properties -------------------------------*- C -*-===*
 *
 * Automatically generated file. DO NOT MODIFY THIS FILE: ANY MODIFICATION WILL BE REVERTED.
 *
 * Copyright (c) 2020 Oever Gonz√°lez
 *
 *===---------------------------------------------------------------------------------------------------------------===*
 *
 * \file
 * Contains a Hash Table which contains a set of undiscoverable hardware properties, generated from a JSON file. This
 * is intended to prevent developers from embedding magic addresses, names or general information about the hardware in
 * the source code. Instead, developers will add properties to the JSON file and search them in the Hash Table using a
 * descriptive property name.
 *
 *===--------------------------------------------------------------------------------------------------------------===*/

#pragma once

#include <stdbool.h>

/// \brief Return the value of the requested property.
///
/// This function will try to find a property in the generated hash table, and return it's value by performing a 'fast'
/// lookup, verifying the property and checking the result. The resulting value is a pointer to a string that lives in
/// the RO section, so it should not be changed, or NULL if the property cannot be found.
///
/// \param property is the fully qualified name of the property.
/// \return a pointer to a string that is the property value; or NULL if the property was not found.
const char *getDeviceDescriptorProperty(const char *property);

/// \brief Run a small test to check the lookup algorithm.
/// \return false if the algorithm does not work, true otherwise.
bool isDeviceDescriptorWorking();
