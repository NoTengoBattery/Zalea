#===-- EntryPoint.sx - Entry point for booting in x86  ---------------------------------------------------*- ASM -*-===#
#
# Copyright (c) 2020 Oever González
#
#  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
#  the License. You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
#  an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
#  specific language governing permissions and limitations under the License.
# SPDX-License-Identifier: Apache-2.0
#
#===----------------------------------------------------------------------------------------------------------------===#
#/
#/ \file
#/ This file is the entry point for booting in x86. This is the first code executed by the Main Executable. In the
#/ future, a small loader will uncompress the Main Executable in memory and will turn on the MMU (and will put the CPU
#/ in the final kernel-mode state). Once the loader has done that, this code should be the very first thing to run.
#/
#===----------------------------------------------------------------------------------------------------------------===#

#include <config.h>

.section .start, "ax"
.global start
start:
  XCHGW %bx, %bx # BOCHS magic breakpoint
  JMP start

# Those are placeholders (needed because LLD will not identify the sections correctly when no data is in the sections)
# but they are only needed when no data is in the section. Most likely to not happen ever but anyway...

.section .text, "ax", @progbits
.global textPlaceholder
textPlaceholder:
  JMP textPlaceholder

.section .data, "aw", @progbits
.global dataPlaceholder
dataPlaceholder:
  .ascii "dataPlaceholder"

.section .rodata, "a", @progbits
.global rodataPlaceholder
rodataPlaceholder:
  .ascii "rodataPlaceholder"
