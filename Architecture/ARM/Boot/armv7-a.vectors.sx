#===-- armv7-a.vectors.sx - Vector Table for ARMv7-A Processors ------------------------------------------*- ASM -*-===#
#
# Copyright (c) 2020 Oever Gonz√°lez
#
#  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
#  the License. You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
#  an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
#  specific language governing permissions and limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#
#===----------------------------------------------------------------------------------------------------------------===#
#/
#/ \file
#/ According to ARM's documentation, all ARM processors for ARMv6 and earlier, ARMv7-A and ARMv7-M must have an
# /interrupt vector table which consist of branch or PC-load instructions. All of these instructions must be ARM, but
#/ the ARMv6-T2 support Thumb32 instructions, which doesn't matter because if all support ARM, ARM will be used.
#/
#/ http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0388f/CIHFIAJC.html
#/
#===----------------------------------------------------------------------------------------------------------------===#

#include <config.h>
#define __FILENAME__ "EntryPoint.sx"
#include <AssemblerMagic/AssemblerMagic.h>

# TODO: Add the labels when they are ready to be included here
NAKED_GLOBAL_ARM_FUNCTION(.start.header, start)
                    LDR   PC,           rreset              @ ARM Reset vector
                    LDR   PC,           undefi              @ ARM Undefined Instruction vector
                    LDR   PC,           armswi              @ ARM Software Interrupt vector
                    LDR   PC,           pftabt              @ ARM Prefetch Abort vector
                    LDR   PC,           dtaabt              @ ARM Data Abort vector
                    NOP                                     @ RESERVED
                    LDR   PC,           armirq              @ ARM IRQ vector
                    LDR   PC,           armfiq              @ ARM FIQ vector

/* ------------------------------------------------ Actual Addresses ------------------------------------------------ */
  rreset:           .word               entry               @ ARM Reset vector
  undefi:           .word               entry               @ ARM Undefined Instruction vector
  armswi:           .word               entry               @ ARM Software Interrupt vector
  pftabt:           .word               entry               @ ARM Prefetch Abort vector
  dtaabt:           .word               entry               @ ARM Data Abort vector
  rsrved:           .word               entry               @ RESERVED
  armirq:           .word               entry               @ ARM IRQ vector
  armfiq:           .word               entry               @ ARM FIQ vector
  vecend:           .word               .                   @ This labels the end
NAKED_GLOBAL_ARM_FUNCTION_EPILOG(start)
